using Microsoft.VisualBasic.FileIO;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Collections.Generic;
using System.Text;
using Utility;

public class StartUp()
{
    public static void Main()
    {
        //var base64Csv2 = "";
        //var json2 = Base64Helper.TryDecode(base64Csv2);

        var base64Csv1 = "";

        var json = Base64Helper.TryDecode(base64Csv1);

        //var dict = File.ReadLines("C:\\Users\\franc\\Desktop\\JsonDaConvertire\\TestJson\\CsvDone\\TestRisultati.csv").Select(line => line.Split(',')).ToDictionary(line => line[0], line => line[1]);

        Dictionary<string, string> Value = new Dictionary<string, string>();

        using (TextFieldParser parser = new TextFieldParser(new MemoryStream(Encoding.UTF8.GetBytes(json ?? ""))))
        {
            parser.TextFieldType = FieldType.Delimited;
            parser.SetDelimiters(",");
            while (!parser.EndOfData)
            {
                //Processing row
                string[] fields = parser.ReadFields();

                Value.Add(fields[0], fields[1]);
            }
        }

        string Json = Newtonsoft.Json.JsonConvert.SerializeObject(Value);
    }
}